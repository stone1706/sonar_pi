---
version: 2.1

parameters:
    run_workflow_deploy:
        type: boolean
        default: true

## Start of build control of O58 and O562 plugins
## run_workflow_deploy_O58
##    type: boolean
##    default: true
## run_workflow_deploy_O562
##    type: boolean
##    default: false

std-filters: &std-filters
    filters:
        branches:
            ignore:
            - devel
            - tmp
        tags:
            only: /.*/

workflows:
    build_all:
        jobs:
## ----------------------
## OpenCPN 5.8 Plugins
## ----------------------
        - build-android-arm64:
             <<: *std-filters 
        - build-debian-arm64-11-bullseye:
            <<: *std-filters
         
## KEEP needed for Jammy with wx32
        - build-ubuntu-x86_64-2204-jammy:
            <<: *std-filters
         
orbs:
    cloudsmith: cloudsmith/cloudsmith@1.0.4
    win: circleci/windows@5.0

commands:
    deploy-code:
        parameters:
            install-python:
                type: boolean
                default: false
            DEPLOY-USE-ORB:
                type: boolean
                default: true
        steps:
            - when:
                condition: <<pipeline.parameters.run_workflow_deploy>>
                steps:
                - when:
                    condition: <<parameters.install-python>>
                    steps:
                    - run: sudo apt install -y python3-pip
                    - run: python3 -m pip install cloudsmith-cli
                - when:
                    condition: <<parameters.DEPLOY-USE-ORB>>
                    steps:
                    - cloudsmith/ensure-api-key
                    - cloudsmith/install-cli
                - run: bash ci/cloudsmith-upload.sh

    # if you want to use a local proxy add Acquire::http::Proxy \"http://192.168.1.1:3142\"; to a file called circleci-cache/apt-proxy. This will require
    #    --volume {your local directory}/circleci-cache:/home/circleci/circleci-cache
    # on the circleci local command line so that the docker image script can have access to the directory
    # if you are on a slow or data limited internet link you can put a copy of master.zip here, or allow one to be downloaded by the script, as it is used by the android builds to
    # provide the wxWidgets QT information.

jobs:
## ---------------------
## OpenCPN 5.8 Plugins
## ---------------------
    build-android-arm64:
        docker:
        - image: cimg/android:2023.12-ndk
        resource_class: large
        environment:
        - OCPN_TARGET:  android-arm64
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: chmod a+x ci/*.sh
        - run: bash ci/circleci-build-android-arm64.sh
        - deploy-code:
            install-python: true
        - store_artifacts:
            path: ./build
            destination: andriod-build
    
    build-debian-arm64-12-bookworm:
        machine:
            image: ubuntu-2004:202104-01
        environment:
        - OCPN_TARGET=bookworm-arm64
        - DOCKER_IMAGE=arm64v8/debian:bookworm
        - BUILD_FLAGS=-j3
        - BUILD_ENV=debian
        - WX_VER: 32
        - BUILD_GTK3: true
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: chmod a+x ./ci/*.sh
        - run:
            command: ci/circleci-build-ubuntu-docker.sh
            no_output_timeout: 30m
        - deploy-code
    
    build-debian-x86_64-12-bookworm:
        machine:
            image: ubuntu-2004:202104-01
        environment:
        - OCPN_TARGET: bookworm
        - BUILD_GTK3: true
        - WX_VER: 32
        - DEPLOY_USE_ORB: true
        - BUILD_ENV=debian
        - DOCKER_IMAGE=debian:bookworm
        steps:
        - checkout
        - run: chmod a+x ci/*.sh
        - run:
            command: ci/circleci-build-ubuntu-docker.sh
            no_output_timeout: 30m
        - deploy-code
    build-debian-arm64-11-bullseye:
        machine:
            image: ubuntu-2004:202104-01
        environment:
        - OCPN_TARGET=bullseye-arm64
        - DOCKER_IMAGE=arm64v8/debian:bullseye-backports
        - BUILD_FLAGS=-j3
        - BUILD_ENV=debian
        - BUILD_GTK3: true
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: chmod a+x ./ci/*.sh
        - run:
            command: ci/circleci-build-ubuntu-docker.sh
            no_output_timeout: 30m
        - deploy-code
    
## KEEP needed for OpenCPN v5.8 Jammy wx32 build
    build-ubuntu-x86_64-2204-jammy:
        docker:
        - image: cimg/base:edge-22.04
        environment:
        - BUILD_GTK3: true
        - WX_VER: 32
        - OCPN_TARGET: jammy
        - DEPLOY_USE_ORB: true
        - BUILD_ENV=ubuntu
        steps:
        - checkout
        - run: >
            echo "deb-src http://us.archive.ubuntu.com/ubuntu/ jammy main" | sudo tee -a /etc/apt/sources.list
        - run: >
            echo "deb-src http://us.archive.ubuntu.com/ubuntu/ jammy-updates main" | sudo tee -a /etc/apt/sources.list
        - run: >
            echo "deb [trusted=yes] https://ppa.launchpadcontent.net/opencpn/opencpn/ubuntu/ jammy main" | sudo tee -a /etc/apt/sources.list
        - run: cat /etc/apt/sources.list
        - run: chmod a+x ci/*.sh
        - run: ci/circleci-build-debian.sh
        - deploy-code

    build-debian-arm64-10-buster:
        machine:
            image: ubuntu-2004:202104-01
        resource_class: arm.medium
        environment:
        - OCPN_TARGET=buster-arm64
        - DOCKER_IMAGE=jongough/debian-arm64:buster
        - BUILD_FLAGS=-j3
        - BUILD_ENV=debian
        - DEPLOY_USE_ORB: true
        steps:
        - checkout
        - run: chmod a+x ./ci/*.sh
        - run:
            command: ci/circleci-build-ubuntu-docker.sh
            no_output_timeout: 30m
        - deploy-code
    
